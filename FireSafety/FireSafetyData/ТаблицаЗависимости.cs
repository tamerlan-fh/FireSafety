using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FireSafety.FireSafetyData
{
    class ТаблицаЗависимостиГоризонтальныйПуть
    {
        private static ТаблицаЗависимостиГоризонтальныйПуть instance;
        public static ТаблицаЗависимостиГоризонтальныйПуть Instance
        {
            get
            {
                if (instance == null)
                    instance = new ТаблицаЗависимостиГоризонтальныйПуть();
                return instance;
            }
        }

        private Dictionary<double, double> таблицаСкорости;
        private Dictionary<double, double> таблицаИнтенсивности;

        public double СкоростьЧерезПлотность(double плотность)
        {
            //if (плотность >= 0.9) return таблицаСкорости[0.9];
            //if (плотность >= 0.8) return таблицаСкорости[0.8];
            //if (плотность >= 0.7) return таблицаСкорости[0.7];
            //if (плотность >= 0.6) return таблицаСкорости[0.6];
            //if (плотность >= 0.5) return таблицаСкорости[0.5];
            //if (плотность >= 0.4) return таблицаСкорости[0.4];
            //if (плотность >= 0.3) return таблицаСкорости[0.3];
            //if (плотность >= 0.2) return таблицаСкорости[0.2];
            //if (плотность >= 0.1) return таблицаСкорости[0.1];
            //if (плотность >= 0.05) return таблицаСкорости[0.05];
            //return таблицаСкорости[0.01];

            if (плотность <= 0.01) return 100;
            if (плотность <= 0.05 && плотность > 0.01) return (100 + (100 - 100) / Math.Abs(0.05 - 0.01) * Math.Abs(плотность - 0.01));
            if (плотность <= 0.1 && плотность > 0.05) return (100 + (80 - 100) / Math.Abs(0.1 - 0.05) * Math.Abs(плотность - 0.05));
            if (плотность <= 0.2 && плотность > 0.1) return (80 + (60 - 80) / Math.Abs(0.2 - 0.1) * Math.Abs(плотность - 0.1));
            if (плотность <= 0.3 && плотность > 0.2) return (60 + (47 - 60) / Math.Abs(0.3 - 0.2) * Math.Abs(плотность - 0.2));
            if (плотность <= 0.4 && плотность > 0.3) return (47 + (40 - 47) / Math.Abs(0.4 - 0.3) * Math.Abs(плотность - 0.3));
            if (плотность <= 0.5 && плотность > 0.4) return (40 + (33 - 40) / Math.Abs(0.5 - 0.4) * Math.Abs(плотность - 0.4));
            if (плотность <= 0.6 && плотность > 0.5) return (19 + (15 - 19) / Math.Abs(0.9 - 0.8) * Math.Abs(плотность - 0.8));
            return 15;
            //return (19 + (15 - 19) / Math.Abs(0.9 - 0.8) * Math.Abs(плотность - 0.8));
        }
        public double СкоростьЧерезИнтенсивность(double интенсивность)
        {
            if (интенсивность <= 1) return 100;
            if (интенсивность <= 5 && интенсивность > 1) return (100 + (100 - 100) / Math.Abs(5 - 1) * Math.Abs(интенсивность - 1));
            if (интенсивность <= 8 && интенсивность > 5) return (100 + (80 - 100) / Math.Abs(8 - 5) * Math.Abs(интенсивность - 5));
            if (интенсивность <= 12 && интенсивность > 8) return (80 + (60 - 80) / Math.Abs(12 - 8) * Math.Abs(интенсивность - 8));
            if (интенсивность <= 14.1 && интенсивность > 12) return (60 + (47 - 60) / Math.Abs(14.1 - 12) * Math.Abs(интенсивность - 12));
            if (интенсивность <= 16 && интенсивность > 14.1) return (47 + (40 - 47) / Math.Abs(16 - 14.1) * Math.Abs(интенсивность - 14.1));
            if (интенсивность <= 16.5 && интенсивность > 16) return (40 + (33 - 40) / Math.Abs(16.5 - 16) * Math.Abs(интенсивность - 16));
            return 15;
        }
        public double ИнтенсивностьЧерезПлотность(double плотность)
        {
            //if (плотность >= 0.9) return таблицаИнтенсивности[0.9];
            //if (плотность >= 0.8) return таблицаИнтенсивности[0.8];
            //if (плотность >= 0.7) return таблицаИнтенсивности[0.7];
            //if (плотность >= 0.6) return таблицаИнтенсивности[0.6];
            //if (плотность >= 0.5) return таблицаИнтенсивности[0.5];
            //if (плотность >= 0.4) return таблицаИнтенсивности[0.4];
            //if (плотность >= 0.3) return таблицаИнтенсивности[0.3];
            //if (плотность >= 0.2) return таблицаИнтенсивности[0.2];
            //if (плотность >= 0.1) return таблицаИнтенсивности[0.1];
            //if (плотность >= 0.05) return таблицаИнтенсивности[0.05];
            //return таблицаИнтенсивности[0.01];
            if (плотность <= 0.01) return 1;
            if (плотность <= 0.05 && плотность > 0.01) return (1 + (5 - 1) / Math.Abs(0.05 - 0.01) * Math.Abs(плотность - 0.01));
            if (плотность <= 0.1 && плотность > 0.05) return (5 + (8 - 5) / Math.Abs(0.1 - 0.05) * Math.Abs(плотность - 0.05));
            if (плотность <= 0.2 && плотность > 0.1) return (8 + (12 - 8) / Math.Abs(0.2 - 0.1) * Math.Abs(плотность - 0.1));
            if (плотность <= 0.3 && плотность > 0.2) return (12 + (14.1 - 12) / Math.Abs(0.3 - 0.2) * Math.Abs(плотность - 0.2));
            if (плотность <= 0.4 && плотность > 0.3) return (14.1 + (16 - 14.1) / Math.Abs(0.4 - 0.3) * Math.Abs(плотность - 0.3));
            if (плотность <= 0.5 && плотность > 0.4) return (16 + (16.5 - 16) / Math.Abs(0.5 - 0.4) * Math.Abs(плотность - 0.4));
            if (плотность <= 0.6 && плотность > 0.5) return (16.5 + (16.3 - 16.5) / Math.Abs(0.6 - 0.5) * Math.Abs(плотность - 0.5));
            if (плотность <= 0.7 && плотность > 0.6) return (16.3 + (16.1 - 16.3) / Math.Abs(0.7 - 0.6) * Math.Abs(плотность - 0.6));
            if (плотность <= 0.8 && плотность > 0.7) return (16.1 + (15.2 - 16.1) / Math.Abs(0.8 - 0.7) * Math.Abs(плотность - 0.7));
            if (плотность <= 0.9 && плотность > 0.8) return (15.2 + (13.5 - 15.2) / Math.Abs(0.9 - 0.8) * Math.Abs(плотность - 0.8));

            //return (15.2 + (13.5 - 15.2) / Math.Abs(0.9 - 0.8) * Math.Abs(плотность - 0.8));
            return 13.5;
        }
        private ТаблицаЗависимостиГоризонтальныйПуть()
        {
            таблицаСкорости = new Dictionary<double, double>(){
                { 0.01, 100 }, { 0.05, 100 }, { 0.1, 80 },
                { 0.2, 60 }, { 0.3, 47 }, { 0.4, 40 },
                { 0.5, 33 }, { 0.6, 27 }, { 0.7, 23 },
                { 0.8, 19 }, { 0.9, 15 } };
            таблицаИнтенсивности = new Dictionary<double, double>(){
                { 0.01, 1 }, { 0.05, 5 }, { 0.1, 8 },
                { 0.2, 12 }, { 0.3, 14.1 }, { 0.4, 16 },
                { 0.5, 16.5 }, { 0.6, 16.2 }, { 0.7, 16.1 },
                { 0.8, 15.2 }, { 0.9, 13.5 } };
        }
    }
    class ТаблицаЗависимостиЛестницаВниз
    {
        private static ТаблицаЗависимостиЛестницаВниз instance;
        public static ТаблицаЗависимостиЛестницаВниз Instance
        {
            get
            {
                if (instance == null)
                    instance = new ТаблицаЗависимостиЛестницаВниз();
                return instance;
            }
        }

        private Dictionary<double, double> таблицаСкорости;
        private Dictionary<double, double> таблицаИнтенсивности;

        public double СкоростьЧерезПлотность(double плотность)
        {
            if (плотность >= 0.9) return таблицаСкорости[0.9];
            if (плотность >= 0.8) return таблицаСкорости[0.8];
            if (плотность >= 0.7) return таблицаСкорости[0.7];
            if (плотность >= 0.6) return таблицаСкорости[0.6];
            if (плотность >= 0.5) return таблицаСкорости[0.5];
            if (плотность >= 0.4) return таблицаСкорости[0.4];
            if (плотность >= 0.3) return таблицаСкорости[0.3];
            if (плотность >= 0.2) return таблицаСкорости[0.2];
            if (плотность >= 0.1) return таблицаСкорости[0.1];
            if (плотность >= 0.05) return таблицаСкорости[0.05];
            return таблицаСкорости[0.01];
        }
        public double Интенсивность(double плотность)
        {
            if (плотность >= 0.9) return таблицаИнтенсивности[0.9];
            if (плотность >= 0.8) return таблицаИнтенсивности[0.8];
            if (плотность >= 0.7) return таблицаИнтенсивности[0.7];
            if (плотность >= 0.6) return таблицаИнтенсивности[0.6];
            if (плотность >= 0.5) return таблицаИнтенсивности[0.5];
            if (плотность >= 0.4) return таблицаИнтенсивности[0.4];
            if (плотность >= 0.3) return таблицаИнтенсивности[0.3];
            if (плотность >= 0.2) return таблицаИнтенсивности[0.2];
            if (плотность >= 0.1) return таблицаИнтенсивности[0.1];
            if (плотность >= 0.05) return таблицаИнтенсивности[0.05];
            return таблицаИнтенсивности[0.01];
        }
        private ТаблицаЗависимостиЛестницаВниз()
        {
            таблицаСкорости = new Dictionary<double, double>(){
                { 0.01, 100 }, { 0.05, 100 }, { 0.1, 95 },
                { 0.2, 68 }, { 0.3, 52 }, { 0.4, 40 },
                { 0.5, 31 }, { 0.6, 24 }, { 0.7, 18 },
                { 0.8, 13 }, { 0.9, 10 } };
            таблицаИнтенсивности = new Dictionary<double, double>(){
                { 0.01, 1 }, { 0.05, 5 }, { 0.1, 9.5 },
                { 0.2, 13.6 }, { 0.3, 16.6 }, { 0.4, 16 },
                { 0.5, 15.6 }, { 0.6, 14.4 }, { 0.7, 12.6 },
                { 0.8, 10.4 }, { 0.9, 7.2 } };
        }
    }
    class ТаблицаЗависимостиДвернойПроем
    {
        private static ТаблицаЗависимостиДвернойПроем instance;
        public static ТаблицаЗависимостиДвернойПроем Instance
        {
            get
            {
                if (instance == null)
                    instance = new ТаблицаЗависимостиДвернойПроем();
                return instance;
            }
        }

        private Dictionary<double, double> таблицаИнтенсивности;
        public double Интенсивность(double плотность)
        {
            if (плотность >= 0.9) return таблицаИнтенсивности[0.9];
            if (плотность >= 0.8) return таблицаИнтенсивности[0.8];
            if (плотность >= 0.7) return таблицаИнтенсивности[0.7];
            if (плотность >= 0.6) return таблицаИнтенсивности[0.6];
            if (плотность >= 0.5) return таблицаИнтенсивности[0.5];
            if (плотность >= 0.4) return таблицаИнтенсивности[0.4];
            if (плотность >= 0.3) return таблицаИнтенсивности[0.3];
            if (плотность >= 0.2) return таблицаИнтенсивности[0.2];
            if (плотность >= 0.1) return таблицаИнтенсивности[0.1];
            if (плотность >= 0.05) return таблицаИнтенсивности[0.05];
            return таблицаИнтенсивности[0.01];
        }
        private ТаблицаЗависимостиДвернойПроем()
        {
            таблицаИнтенсивности = new Dictionary<double, double>(){
                { 0.01, 1 }, { 0.05, 5 }, { 0.1, 8.7 },
                { 0.2, 13.4 }, { 0.3, 15.6 }, { 0.4, 18.4 },
                { 0.5, 19.6 }, { 0.6, 19 }, { 0.7, 18.5 },
                { 0.8, 17.3 }, { 0.9, 8.5 } };
        }
    }
}
