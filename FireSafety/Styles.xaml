<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    mc:Ignorable="d"
                    xmlns:cnvrt="clr-namespace:FireSafety.ValueConverters"
                    xmlns:ctrl ="clr-namespace:FireSafety.Controls"
                    xmlns:m="clr-namespace:FireSafety.Models"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:FireSafety">

    <cnvrt:TimeSpanConverter x:Key="TimeSpanConverter" />
    <cnvrt:DoubleRoundConverter x:Key="DoubleRoundConverter"/>
    <cnvrt:BooleanValueConverter x:Key="BooleanValueConverter" />

    <Color x:Key="Fill_over_top">#FFDBDBDB</Color>
    <Color x:Key="Fill_over_bottom">#FFF6F6F6</Color>
    <Brush x:Key="CheckBox_main_color_">#FFd7d7d7</Brush>

    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>

    <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_top}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_bottom}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="Background">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="Background">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5.5" Y="11"/>
                            </Canvas.RenderTransform>
                            <Path x:Name="OuterBorder_Copy" Data="{StaticResource SliderThumbOuterBorderGeometry}" Margin="0,1,0,0" Stroke="{x:Null}" Fill="#1E000000"/>
                            <Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="{DynamicResource CheckBox_fill_top}" Offset="0"/>
                                        <GradientStop Color="{DynamicResource CheckBox_fill_bottom}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Path.Stroke>
                            </Path>

                        </Canvas>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="2,7,2,5" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="3"/>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="2,6" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="3"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Background" Value="{StaticResource CheckBox_main_color_}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[0].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_top}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Fill.GradientStops[1].Color" Storyboard.TargetName="Background">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Fill_over_bottom}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="11" Y="5.5"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                        <GradientStop Color="{DynamicResource CheckBox_fill_top}" Offset="0"/>
                                        <GradientStop Color="{DynamicResource CheckBox_fill_bottom}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1" d:IsHidden="True" Visibility="Collapsed"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" StrokeThickness="1">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Path.Stroke>
                            </Path>
                        </Canvas>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="10" Height="6" Margin="0,0,0,-1" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Column="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_light_}" Grid.Row="1" Grid.Column="3"/>
                        </Grid>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="10" Height="6" Margin="0,2.5" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="1" Grid.Row="1"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Column="3"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1" Grid.Column="2"/>
                            <Rectangle Width="1" Height="1" Fill="{DynamicResource Text_dark_}" Grid.Row="1" Grid.Column="3"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Background" Value="{StaticResource CheckBox_main_color_}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFC4C4C4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            <Border x:Name="TrackBackground" BorderThickness="1" CornerRadius="1" Height="6" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="#FFd7d7d7"/>
                                </Border.Background>
                                <Canvas Margin="0" Height="6">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="Auto" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>

                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
                                    <Border x:Name="TrackBackground" BorderThickness="1" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="6">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource CheckBox_main_color}"/>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource CheckBox_stroke_color}"/>
                                        </Border.BorderBrush>
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ctrl:TransformControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:TransformControl}">
                    <Border Background="{TemplateBinding Background}" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							Padding="{TemplateBinding Padding}" 
							ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Viewbox x:Name="PART_ZoomControl">
                            <Border x:Name="PART_RotateControl">
                                <ContentPresenter/>
                            </Border>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key ="RoundRadioButtonTemplate" TargetType ="{x:Type RadioButton}">
        <Setter Property ="Foreground" Value ="Black"/>
        <Setter Property ="FontWeight" Value ="Bold"/>
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type RadioButton}">
                    <Viewbox>
                        <Grid>
                            <Ellipse Name ="OuterRing" Width ="66" Height ="66" Fill ="MediumSeaGreen" Opacity="0.7"/>
                            <Ellipse Name ="InnerRing" Width ="60" Height ="60" Fill ="MintCream"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Ellipse Name ="InnerRing2" Width ="60" Height ="60" Fill ="MintCream" Opacity="0.45" />
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <!--<Setter TargetName ="OuterRing" Property ="Fill" Value ="MediumSeaGreen"/>-->
                            <Setter TargetName ="OuterRing" Property ="Fill" Value="Orange"/>
                            <Setter TargetName ="OuterRing" Property ="Opacity" Value ="1"/>
                            <Setter TargetName ="InnerRing2" Property ="Opacity" Value ="0"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="OuterRing" Property ="Fill" Value="Orange"/>
                            <Setter TargetName ="OuterRing" Property ="Height" Value ="70"/>
                            <Setter TargetName ="OuterRing" Property ="Width" Value ="70"/>
                            <Setter TargetName ="OuterRing" Property ="Opacity" Value ="1"/>
                            <Setter TargetName ="InnerRing" Property ="Height" Value ="55"/>
                            <Setter TargetName ="InnerRing" Property ="Width" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Height" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Width" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Opacity" Value ="0"/>
                        </Trigger>
                        <Trigger Property ="IsChecked" Value ="True">
                            <Setter TargetName ="OuterRing" Property ="Fill" Value="Orange"/>
                            <Setter TargetName ="OuterRing" Property ="Height" Value ="70"/>
                            <Setter TargetName ="OuterRing" Property ="Width" Value ="70"/>
                            <Setter TargetName ="OuterRing" Property ="Opacity" Value ="1"/>
                            <Setter TargetName ="InnerRing" Property ="Height" Value ="55"/>
                            <Setter TargetName ="InnerRing" Property ="Width" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Height" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Width" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Opacity" Value ="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key ="RoundButtonTemplate" TargetType ="{x:Type Button}">
        <Setter Property ="Foreground" Value ="Black"/>
        <Setter Property ="FontWeight" Value ="Bold"/>
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Button}">
                    <Viewbox>
                        <Grid>
                            <Ellipse Name ="OuterRing" Width ="66" Height ="66" Fill ="#FF72E872" Opacity="0.7"/>
                            <Ellipse Name ="InnerRing" Width ="60" Height ="60" Fill ="MintCream"/>
                            <ContentPresenter Margin="1,1,0,1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Ellipse Name ="InnerRing2" Width ="60" Height ="60" Fill ="MintCream" Opacity="0.45" />
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="OuterRing" Property ="Fill" Value ="MediumSeaGreen"/>
                            <Setter TargetName ="OuterRing" Property ="Opacity" Value ="1"/>
                            <Setter TargetName ="InnerRing2" Property ="Opacity" Value ="0"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="OuterRing" Property ="Height" Value ="70"/>
                            <Setter TargetName ="OuterRing" Property ="Width" Value ="70"/>
                            <Setter TargetName ="OuterRing" Property ="Opacity" Value ="1"/>
                            <Setter TargetName ="InnerRing" Property ="Height" Value ="55"/>
                            <Setter TargetName ="InnerRing" Property ="Width" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Height" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Width" Value ="55"/>
                            <Setter TargetName ="InnerRing2" Property ="Opacity" Value ="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key ="RectButtonTemplate" TargetType ="{x:Type Button}">
        <Setter Property ="Foreground" Value ="Black"/>
        <Setter Property ="FontWeight" Value ="Bold"/>
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="{x:Type Button}">
                    <Viewbox>
                        <Grid>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Rectangle Name="OuterRect" Width ="66" Height ="66" Fill="White" Opacity="0.7" RadiusX="10" RadiusY="10"/>
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property ="IsMouseOver" Value ="True">
                            <Setter TargetName ="OuterRect" Property ="Opacity" Value ="0"/>
                        </Trigger>
                        <Trigger Property ="IsPressed" Value ="True">
                            <Setter TargetName ="OuterRect" Property ="Opacity" Value ="0"/>
                            <Setter TargetName ="OuterRect" Property ="Width" Value ="75"/>
                            <Setter TargetName ="OuterRect" Property ="Height" Value ="75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextBoxReadOnly" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="TextBox" >
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <DataTemplate x:Key="ControlTemplateFloor" DataType="{x:Type m:Floor}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Номер Этажа" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding НомерЭтажа, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateBuilding" DataType="{x:Type m:Building}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Число этажей" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Floors.Count, Mode=OneWay}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="2" Text="Время эвакуации, мин" ToolTip="Время прохождения, мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Path=EvacuationTime, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.000}}" Style="{StaticResource TextBoxReadOnly}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateEntity" DataType="{x:Type m:Entity}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Расположение" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Parent.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateFloorsConnectionSection" DataType="{x:Type m:FloorsConnectionSection}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100" Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Расположение" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Parent.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateEntryNode" DataType="{x:Type m:EntryNode}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Расположение" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Parent.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="3" Text="Ширина, м" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=Width,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="4" Text="Длина, м" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Path=Length, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="5" Text="Интенсивность движения, м/мин" ToolTip="Интенсивность движения, м/мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Path=IntensityHumanFlow, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="6" Text="Время прохождения участка, мин" ToolTip="Время прохождения участка, мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="6" Text="{Binding Path=MovementTime, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateStairsNode" DataType="{x:Type m:StairsNode}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Расположение" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Parent.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="2" Text="Связать с этажом ниже" Style="{StaticResource TextBoxReadOnly}" />
            <ComboBox Grid.Column="1" Grid.Row="2" SelectedItem="{Binding Path=IsFloorsConnected,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanValueConverter}}" IsEnabled="{Binding CanAddFloorsConnection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  BorderThickness="0" Margin="2,1" >
                <ComboBox.Items>
                    <sys:String>Нет</sys:String>
                    <sys:String>Да</sys:String>
                </ComboBox.Items>
            </ComboBox>


        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateStartNode" DataType="{x:Type m:StartNode}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Расположение" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Parent.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="2" Text="Число людей" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Path=PeopleCount,  UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="3" Text="Площадь проекции" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=ProjectionArea,  UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource TextBoxStyle}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateRoute" DataType="{x:Type m:Route}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource TextBoxStyle}" />
            
            <TextBox Grid.Column="0" Grid.Row="3" Text="Начало" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=FirstNode.Title}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="4" Text="Конец" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Path=LastNode.Title}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="5" Text="Длина, м" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Path=Length, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="6" Text="Время прохождения, мин" ToolTip="Время прохождения, мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="6" Text="{Binding Path=MovementTime, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TimeSpanConverter }}" Style="{StaticResource TextBoxReadOnly}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ControlTemplateRoadSection" DataType="{x:Type m:RoadSection}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150"/>
                <ColumnDefinition MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" Text="Название" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="1" Text="Расположение" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=Parent.Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="2" Text="Начало" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Path=First.Title}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="3" Text="Конец" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=Last.Title}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="4" Text="Ширина, м" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Path=Width,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="5" Text="Длина, м" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Path=Length, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" VerticalContentAlignment="Top" Style="{StaticResource TextBoxStyle}" />

            <TextBox Grid.Column="0" Grid.Row="7" Text="Интенсивность движения, м/мин" ToolTip="Интенсивность движения, м/мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="7" Text="{Binding Path=IntensityHumanFlow, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="8" Text="Скорость движения людского потока, м/мин" ToolTip="Скорость движения людского потока, м/мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="8" Text="{Binding Path=MovementSpeed, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="9" Text="Время прохождения участка, мин" ToolTip="Время прохождения участка, мин" Style="{StaticResource TextBoxReadOnly}" />
            <TextBox Grid.Column="1" Grid.Row="9" Text="{Binding Path=MovementTime, Mode=OneWay,  UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleRoundConverter}}" Style="{StaticResource TextBoxReadOnly}" />

            <TextBox Grid.Column="0" Grid.Row="10" Text="Авторазмеры" Style="{StaticResource TextBoxReadOnly}" />
            <CheckBox Grid.Column="1" Grid.Row="10" IsChecked="{Binding AutoSize, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Top" Margin="2,1" />
        </Grid>
    </DataTemplate>

</ResourceDictionary>